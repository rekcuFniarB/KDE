Description: imageshackus
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 imageshackus (0.1-0ppa3) raring; urgency=low
 .
   * Switch to dpkg-source 3.0 (quilt) format
Author: BrainFucker <retratserif@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- /dev/null
+++ imageshackus-0.1/imageshack.us.py
@@ -0,0 +1,79 @@
+#!/usr/bin/env python2.7
+# -*- coding: utf-8 -*-
+
+import os, sys, re
+import subprocess as run
+import simplejson as json
+import requests as www
+
+config = {
+    'url':'http://post.imageshack.us/upload_api.php',
+    'key': '',
+    'UA': 'Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:12.0) Gecko/20100101 Firefox/21.0',
+    'referer': 'http://imageshack.us/?no_multi=1'
+    }
+config_file = os.path.join(os.environ.get('HOME'), '.config','imageshack.json')
+
+File = sys.argv[1].decode('utf-8') # Picture file
+Filename = os.path.basename(File)
+
+if not os.path.exists(config_file):
+    # Getting api key from the imageshack.us main page
+    key_expr = re.compile(r'<input type="hidden" name="key" value="(.+?)"')
+    try:
+        r = www.get('http://imageshack.us/', headers={'User-Agent': config['UA'], 'Referer': 'http://imageshack.us/'})
+        if r.ok:
+            page =  r.content
+            config['key'] = key_expr.search(page).group(1)
+    except:
+        sys.stderr.write("Failed to get the api key.\n")
+        #raise
+        sys.exit(1)
+    # Generating config file and storing api key
+    with open (config_file, 'wb') as f:
+        json.dump(config, f)
+else:
+    # Loading config (api key etc.)
+    try:
+        with open (config_file, 'rb') as f:
+            config = json.load(f)
+    except:
+        sys.stderr.write("Failed to load config.\n")
+        sys.exit(1)
+
+headers = {'User-Agent': config['UA'], 'Referer': config['referer']}
+
+try:
+    # Uploading picture
+    r = www.post(config['url'] , data={'format':'json', 'key':config['key'], 'optimage':'0'}, files={'fileupload':(Filename, open(File, 'rb'))}, headers=headers)
+    if r.ok:
+        Data = r.json()
+        Status = "http://img%s.imageshack.us/img%s/%s/%s" % (Data['files']['server'], Data['files']['server'], Data['files']['bucket'], Data['files']['image']['filename'])
+    else:
+        Status = r.status_code
+except:
+    Status = 'Error!'
+    raise
+
+print Status
+
+# Popup notify
+try:
+    #run.check_output(['which', 'kdialog'])
+    run.call(['kdialog', '--icon', 'ImageShack', '--passivepopup', Status, '3'])
+except:
+    try:
+        #run.check_output(['which', 'notify-send'])
+        run.call(['notify-send', '-t', '3000', '--icon=ImageShack', Status])
+    except:
+        pass
+    raise
+
+# Put link to the clipboard
+if 'DISPLAY' in os.environ:
+    try:
+        xclip = run.Popen(['xclip'], stdin=run.PIPE)
+        xclip.communicate(input=Status)
+        xclip.terminate()
+    except:
+        pass
--- /dev/null
+++ imageshackus-0.1/screenshot
@@ -0,0 +1,50 @@
+#!/bin/bash
+
+##   Makes screenshot of the screen or a window, uploads it to the img.fhashtux.org and puts link to the clipboard.
+##   Depencies: scrot, xclip, curl and kdialog (or notify-send instead).
+## 
+##   Written by BrainFucker ( https://github.com/rekcuFniarB/Bash-scripts ).
+##   This script is licensed under the GPL3 license.
+
+if [[ $1 == '-h' || $1 == '--help' ]]
+  then
+    echo "Make screenshot, upload it to the http://www.imageshack.us and put link to the clipboard. Useful with keyboard shortcuts.
+    
+Usage:
+    screenshot
+        Makes screenshot of the whole screen.
+    screenshot -ub
+        Makes screenshot of the current window.
+    screenshot -h
+    screenshot --help
+        Displays this help.
+    Also accepts scrot options.
+
+Written by BrainFucker ( https://github.com/rekcuFniarB/Bash-scripts ).
+This script is licensed under the GPLv3 license."
+    exit 0
+fi
+
+cd /tmp
+
+# Flashtux
+# Link=`scrot "$@" -q 30 -e 'curl -s -F "form=1" -F "MAX_FILE_SIZE=5242880" -F "postimg=1" -F "upload=UPLOAD!" -F "filename=@$f;type=image/png" -A "Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:12.0) Gecko/20100101 Firefox/12.0" -w %{redirect_url} -e http://img.flashtux.org/ http://img.flashtux.org/index.php && rm $f'`
+
+# Itmages
+# Link=`scrot "$@" -q 30 -e 'curl -s -F "yt0= Загрузить " -F "picture[]=@$f;type=image/png" -A "Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:12.0) Gecko/20100101 Firefox/12.0" -w %{redirect_url} -e http://itmages.ru/ http://itmages.ru/add && rm $f'`
+# Link="$(wget "$Link" -U "Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:12.0) Gecko/20100101 Firefox/12.0" -q -O - | grep "h_" -m 1| ssed -R 's/.*(http.*?)\[\/.*/\1/g')"
+
+scrot "$@" -q 30 -e 'imageshack.us $f; rm $f' '/dev/shm/Screenshot_%s.png'
+
+# Editing link to match direct link to the picture
+# Link=${Link//org\/img/org\/upload\/img}
+
+# Put link to the clipboard
+# echo -n $Link|xclip
+
+# Inform when link is ready to paste.
+# if [[ $(which kdialog) ]]
+#   then kdialog --passivepopup 'Screenshot done!' 3
+# elif [[ $(which notify-send) ]]
+#   then notify-send -t 3000 'Screenshot done!'
+# fi
--- /dev/null
+++ imageshackus-0.1/compilepy.sh
@@ -0,0 +1,4 @@
+#!/bin/bash
+python2.7 -OO -m compileall $1
+mv ${1}o $2
+echo "compilepy.sh ..."
\ No newline at end of file
--- /dev/null
+++ imageshackus-0.1/iconsgen.sh
@@ -0,0 +1,16 @@
+#!/bin/bash
+# Generate icons
+
+## Getting the icon
+# wget 'http://upload.wikimedia.org/wikipedia/en/f/f9/Imageshacknew.png' -O "$1/ImageShack.png"
+
+Sizes="64 48 32 24 22 16"
+echo "Making:"
+for x in $Sizes
+do
+    Dir="$2/icons/hicolor/${x}x${x}/apps"
+    mkdir -p "$Dir"
+    echo $x
+    convert "$1/Frog-White-Lipped-small.png" -resize ${x}x${x}\! "$Dir/ImageShack.png"
+done
+echo "Generated icons."
--- /dev/null
+++ imageshackus-0.1/imageshack.us.desktop
@@ -0,0 +1,13 @@
+[Desktop Action ImageShack]
+Exec=imageshack.us %f
+Icon=ImageShack
+Name=Upload to Imageshack.us
+Name[ru]=Загрузить на Imageshack.us
+
+[Desktop Entry]
+Actions=ImageShack;
+MimeType=image/*;
+ServiceTypes=
+Type=Service
+X-KDE-ServiceTypes=KonqPopupMenu/Plugin
+X-KDE-Submenu=
